<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nym on Nym Docs</title><link>https://nymtech.net/docs/</link><description>Recent content in Nym on Nym Docs</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://nymtech.net/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>The Nym Platform</title><link>https://nymtech.net/docs/overview/nym-platform/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/overview/nym-platform/</guid><description>We are currently running a testnet with Nym validators and mixnodes. Together, the validators and mixnodes provide integrated access control and network privacy to users of the Nym platform. They are assisted by several other platform components: multiple types of clients, and gateway nodes.
Here&amp;rsquo;s an overview of the entire network.
The Nym platform includes mixnodes, validators, gateways, and client code used for talking to the network. All of this is run in a decentralized, trustless fashion.</description></item><item><title>Code of Conduct</title><link>https://nymtech.net/docs/community/code-of-conduct/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/community/code-of-conduct/</guid><description>We are committed to providing a friendly, safe and welcoming environment for all, regardless of level of experience, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, nationality, or other similar characteristic.
Please avoid using overtly sexual aliases or other nicknames that might detract from a friendly, safe and welcoming environment for all.
Please be kind and courteous. Thereâ€™s no need to be mean or rude.</description></item><item><title>Incentives</title><link>https://nymtech.net/docs/run-nym-nodes/incentives/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/run-nym-nodes/incentives/</guid><description>We will get into building the Nym codebase and running nodes in the next section. Before we do so, a note on token incentives.
The Nym network has some of the same overall goals as Tor. But we want to enable Nym to scale in response to increased demand (and shrink when demand drops, so as not to waste resources). To do this in a decentralized way, nodes are included in the network based on cryptocurrency bonding, and a system of delegated staking.</description></item><item><title>Building Nym</title><link>https://nymtech.net/docs/run-nym-nodes/build-nym/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/run-nym-nodes/build-nym/</guid><description>This page details how to build the main Nym platform code, in Rust. If you want to build and run a validator, go here instead.
Nym runs on Mac OS X, Linux, and Windows. Windows should be considered experimental - it works fine if you&amp;rsquo;re an app developer but isn&amp;rsquo;t recommended for running nodes.
Prerequisites:
on Debian/Ubuntu: sudo apt install pkg-config build-essential libssl-dev curl jq. Rust 1.47 or later, with cargo.</description></item><item><title>Licensing</title><link>https://nymtech.net/docs/community/licensing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/community/licensing/</guid><description>Nym is Free Software released under the Apache License V2.
All of the contributions of the Nym core developers are (c) Nym Technologies SA. If you are interested in talking to us about other licenses, please get in touch.</description></item><item><title>Choose a client</title><link>https://nymtech.net/docs/build-apps/choose-a-client/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/build-apps/choose-a-client/</guid><description>In the previous section, we got a general overview of the application flow when you&amp;rsquo;re building Nym-enabled apps. Now it&amp;rsquo;s time to understand a bit about how to structure your app by choosing a Nym client.
Understanding Nym clients A large proportion of the Nym mixnet&amp;rsquo;s functionality is implemented client-side, including:
determining network topology - what mixnodes exist, what their keys are, etc. registering with a gateway authenticating to a gateway receiving and decrypting messages from the gateway creation of layer-encrypted Sphinx packets sending Sphinx packets with real messages sending Sphinx packet cover traffic when no real messages are being sent In the next few sections we will discuss how to integrate Nym clients into your apps.</description></item><item><title>Mixnodes</title><link>https://nymtech.net/docs/run-nym-nodes/mixnodes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/run-nym-nodes/mixnodes/</guid><description>The Nym mixnode was built in the building nym section. If you haven&amp;rsquo;t yet built Nym and want to run the code, go there first.
To join the Nym testnet as a mixnode, copy the nym-mixnode binary from the target/release directory up to your server (or compile it on the server).
Upgrading from an earlier version If you have already been running a node on the Nym network v0.</description></item><item><title>Network Privacy</title><link>https://nymtech.net/docs/overview/network-privacy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/overview/network-privacy/</guid><description>When you send data across the internet, it can be recorded by a wide range of observers: your ISP, internet infrastructure providers, large tech companies, and governments.
Even if the content of a network request is encrypted, observers can still see that data was transmitted, its size, frequency of transmission, and gather metadata from unencrypted parts of the data (such as IP routing information). Adversaries may then combine all the leaked information to probabilistically de-anonymize users.</description></item><item><title>Validators</title><link>https://nymtech.net/docs/run-nym-nodes/validators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/run-nym-nodes/validators/</guid><description>Nym validators secure the network with a staking token, defending the network from Sybil attacks.
Validators also provide privacy-enhanced credentials based on the testimony of a set of decentralized, blockchain-based issuing authorities. Nym validators use a signature scheme called Coconut to issue credentials. This allows privacy apps to generate anonymous resource claims through decentralised authorities, then use them with Service Providers.
The validator is built using Cosmos SDK and Tendermint, with a CosmWasm smart contract controlling the directory service, node bonding, and delegated mixnet staking.</description></item><item><title>Blockstream Green</title><link>https://nymtech.net/docs/use-apps/blockstream-green/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/use-apps/blockstream-green/</guid><description>You need to run the Nym Socks5 client before following the instructions on this page.
Blockstream Green is a BitCoin and Liquid wallet. Since it supports Socks5, it can use Nym. Set your proxy settings in Green as follows.
First you need to log out.
Next, click on the settings on the right hand side to set proxy URL:
Most wallets and other applications will work basically the same way: find the network proxy settings, enter the proxy url (host: localhost, port: 1080).</description></item><item><title>Electrum</title><link>https://nymtech.net/docs/use-apps/electrum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/use-apps/electrum/</guid><description>You need to run the Nym Socks5 client before following the instructions on this page.
Here&amp;rsquo;s how you use Electrum with Nym&amp;rsquo;s Socks5 client:
Once you start using the nym-socks5-client, your wallet traffic will be sliced up into Sphinx packets, bounced and shuffled as wallet requests and responses pass through the Nym mixnet.</description></item><item><title>KeyBase</title><link>https://nymtech.net/docs/use-apps/keybase/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/use-apps/keybase/</guid><description>We have added support for KeyBase (which we use for our own internal chat). Feel free to try that out and say hello!
The socks5 settings in KeyBase are under Settings &amp;gt; Advanced &amp;gt; Proxy Settings.</description></item><item><title>Requesters</title><link>https://nymtech.net/docs/run-nym-nodes/requester/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/run-nym-nodes/requester/</guid><description>The nym-network-requester was built in the building nym section. If you haven&amp;rsquo;t yet built Nym and want to run the code on this page, go there first.
If you have access to a server, you can run the nym-network-requester, which allows Nym users to make outbound network requests from your server.
The nym-network-requester is NOT an open proxy. It ships with a file called allowed.list.sample, which contains URLs used by the Blockstream Green and Electrum cryptographic wallets.</description></item><item><title>Coconut</title><link>https://nymtech.net/docs/overview/private-access-control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/overview/private-access-control/</guid><description>Introducing Coconut Coconut is a cryptographic signature scheme that produces privacy-enhanced credentials. It lets application programmers who are concerned with resource access control to think and code in a new way.
Most of the time, when we build system security, we think of who questions:
Has Alice identified herself (authentication)? Is Alice allowed to take a specific action (authorisation)? Coconut fundamentally changes these questions. Rather than asking who a user is, it allows application designers to ask different questions, mostly centred around questions of rights:</description></item><item><title>Gateways</title><link>https://nymtech.net/docs/run-nym-nodes/gateways/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/run-nym-nodes/gateways/</guid><description>Gateways The Nym gateway was built in the building nym section. If you haven&amp;rsquo;t yet built Nym and want to run the code, go there first.
Gateways provide a destination for mixnet packets. Most of the internet doesn&amp;rsquo;t use encrypted Sphinx packets, so the gateway acts as a destination, sort of like a mailbox, for messages.
If you would like to run a gateway for the network, please contact us.</description></item><item><title>Links</title><link>https://nymtech.net/docs/overview/links/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/overview/links/</guid><description>Here are some links that may prove handy as you start exploring.
The Nym Project You can chat to us in Keybase. Download the app, then click Teams -&amp;gt; Join a team. Type nymtech.friends into the team name and hit continue. For general chat, hang out in the #general channel. Our development takes places in the #dev channel. Node operators should be in the #node-operators channel to receive notice of system updates or node downtime.</description></item><item><title>Websocket client</title><link>https://nymtech.net/docs/build-apps/websocket-client/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/build-apps/websocket-client/</guid><description>The Nym Websocket Client was built in the building nym section. If you haven&amp;rsquo;t yet built Nym and want to run the code on this page, go there first.
From inside the nym directory, the nym-client binary got built to the ./target/release/ directory. You can run it like this (or add it to your $PATH):
./nym-client
$ ./nym-client _ __ _ _ _ __ ___ | &amp;#39;_ \| | | | &amp;#39;_ \ _ \ | | | | |_| | | | | | | |_| |_|\__, |_| |_| |_| |___/ (client - version 0.</description></item><item><title>Mixnode Troubleshooting FAQ</title><link>https://nymtech.net/docs/run-nym-nodes/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/run-nym-nodes/troubleshooting/</guid><description>How can I tell my node is up and running and mixing traffic? To check from the machine your node is running on: To double check from your local machine Why is my node not mixing any packets &amp;amp; Setting up the firewall How can I make sure my node works from my local machine if I&amp;rsquo;m behind NAT and have no fixed IP address ? Can I use a different port other than 1789 ?</description></item><item><title>Webassembly client</title><link>https://nymtech.net/docs/build-apps/wasm-client/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/build-apps/wasm-client/</guid><description>The Nym webassembly client allows any webassembly-capable runtime to build and send Sphinx packets to the Nym network.
You can install @nymproject/nym-client-wasm from NPM from its package page, or
npm i @nymproject/nym-client-wasm The nym-client-wasm package allows easy creation of Sphinx packets from within mobile apps and browser-based client-side apps (including Electron or similar). Browser extensions should also work.
The webassembly client lets you deliver web apps that build and send Sphinx packets solely in a web browser window.</description></item><item><title>Demos</title><link>https://nymtech.net/docs/build-apps/demos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nymtech.net/docs/build-apps/demos/</guid><description>We have included code examples for multiple languages inside the clients/native/examples directory within our codebase - you can see how to connect and send messages from Go, Python, Rust, and JavaScript there.
It may also be worth running the webassembly example code in clients/webassembly/js-example if you&amp;rsquo;re planning to run your using browser or other js technology.</description></item></channel></rss>